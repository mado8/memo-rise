{"ast":null,"code":"var _jsxFileName = \"/Users/carsoncolgate/Desktop/memo-rise/memorize/client/src/components/LoginSignup.js/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n\nconst AuthService = require('../../utils/auth');\n\nimport { loginUser } from '../../utils/mutation';\nimport Auth from '../../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const [userFormData, setUserFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserFormData({ ...userFormData,\n      [name]: value\n    });\n  };\n\n  const handleFormSubmit = async event => {\n    event.preventDefault(); // check if form has everything (as per react-bootstrap docs)\n\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const response = await loginUser(userFormData);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const {\n        token,\n        user\n      } = await response.json();\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: ''\n    });\n  };\n};\n\n_s(LoginForm, \"JBb8nD/2+8IuO/oORb8K/GRmCa4=\");\n\n_c = LoginForm;\n\nconst LoginFormComponent = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"username\",\n            type: \"text\",\n            placeholder: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"email\",\n            type: \"text\",\n            placeholder: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"password\",\n            type: \"text\",\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = LoginFormComponent;\nexport default LoginFormComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"LoginFormComponent\");","map":{"version":3,"sources":["/Users/carsoncolgate/Desktop/memo-rise/memorize/client/src/components/LoginSignup.js/Login.jsx"],"names":["React","useState","AuthService","require","loginUser","Auth","LoginForm","userFormData","setUserFormData","email","password","validated","showAlert","setShowAlert","handleInputChange","event","name","value","target","handleFormSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","response","ok","Error","token","user","json","console","log","login","err","error","username","LoginFormComponent"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nconst AuthService = require('../../utils/auth')\nimport { loginUser } from '../../utils/mutation';\nimport Auth from '../../utils/auth';\n\nconst LoginForm = () => {\n    const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n    const [validated] = useState(false);\n    const [showAlert, setShowAlert] = useState(false);\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setUserFormData({ ...userFormData, [name]: value });\n    };\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        // check if form has everything (as per react-bootstrap docs)\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        try {\n            const response = await loginUser(userFormData);\n\n            if (!response.ok) {\n                throw new Error('something went wrong!');\n            }\n\n            const { token, user } = await response.json();\n            console.log(user);\n            Auth.login(token);\n        } catch (err) {\n            console.error(err);\n            setShowAlert(true);\n        }\n\n        setUserFormData({\n            username: '',\n            email: '',\n            password: '',\n        });\n    };\n}\nconst LoginFormComponent = () => {\n\n    return (\n        <div>\n            <form>\n                <div>\n                    <label>\n                        <input name='username' type='text' placeholder='Username' />\n                    </label>\n                </div>\n                <div>\n                    <label>\n                        <input name='email' type='text' placeholder='Email' />\n                    </label>\n                </div>\n                <div>\n                    <label>\n                        <input name='password' type='text' placeholder='Password' />\n                    </label>\n                </div>\n                <button type='submit'> Submit</button>\n            </form>\n        </div>\n    )\n}\nexport default LoginFormComponent"]},"metadata":{},"sourceType":"module"}