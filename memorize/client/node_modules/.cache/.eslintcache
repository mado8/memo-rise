[{"/Users/madelineadonley/bootcamp/projects/memo-rise/memorize/client/src/index.js":"1","/Users/madelineadonley/bootcamp/projects/memo-rise/memorize/client/src/App.js":"2","/Users/madelineadonley/bootcamp/projects/memo-rise/memorize/client/src/components/LoginSignup.js/Login.jsx":"3","/Users/madelineadonley/bootcamp/projects/memo-rise/memorize/client/src/utils/auth.js":"4","/Users/madelineadonley/bootcamp/projects/memo-rise/memorize/client/src/components/MainContainer.jsx":"5","/Users/madelineadonley/bootcamp/projects/memo-rise/memorize/client/src/components/myMemories/MyMemories.jsx":"6"},{"size":141,"mtime":1644526838488,"results":"7","hashOfConfig":"8"},{"size":173,"mtime":1644689863879,"results":"9","hashOfConfig":"8"},{"size":2434,"mtime":1644690388165,"results":"10","hashOfConfig":"8"},{"size":1233,"mtime":1644689863882,"results":"11","hashOfConfig":"8"},{"size":394,"mtime":1644695090797,"results":"12","hashOfConfig":"8"},{"size":309,"mtime":1644698694725,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16g8aj4",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"/Users/madelineadonley/bootcamp/projects/memo-rise/memorize/client/src/index.js",[],[],"/Users/madelineadonley/bootcamp/projects/memo-rise/memorize/client/src/App.js",[],[],"/Users/madelineadonley/bootcamp/projects/memo-rise/memorize/client/src/components/LoginSignup.js/Login.jsx",["36","37"],[],"import React, { useState } from 'react'\n// const AuthService = require('../../utils/auth')\n\nconst LoginFormComponent = () => {\n\n  const [userFormData, setUserFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n  })\n  \n  const [errors, setErrors] = useState({})\n\n  const handleChange = (e) => {\n    setUserFormData[e.target.name] = e.target.value\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (validate()) {\n\n      setUserFormData['name'] = ''\n      setUserFormData['email'] = ''\n      setUserFormData['message'] = ''\n\n      //re-route to homepage from here if successfully logged in\n    }\n  }\n\n  const validate = () => {\n\n    setErrors = {}\n    let isValid = true\n\n    if (!userFormData['name']) {\n      isValid = false\n      errors['name'] = 'Please enter your name.'\n    }\n\n    if (!userFormData['email']) {\n      isValid = false\n      errors['email'] = 'Please enter your email Address.'\n    }\n\n    if (typeof userFormData['email'] !== 'undefined') {\n      var pattern = new RegExp(\n        /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\n      )\n      if (!pattern.test(userFormData['email'])) {\n        isValid = false\n        errors['email'] = 'Please enter valid email address.'\n      }\n    }\n\n    if (!userFormData['message']) {\n      isValid = false\n      errors['message'] = 'Please enter your message.'\n    }\n\n    if (errors.name) {\n      alert(errors.name)\n    }\n    if (errors.email) {\n      alert(errors.email)\n    }\n    if (errors.message) {\n      alert(errors.message)\n    }\n\n    // add auth\n    \n    return isValid\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit()}>\n        <div>\n          <label>\n            <input name='username' type='text' placeholder='Username' onChange={handleChange()}/>\n          </label>\n        </div>\n        <div>\n          <label>\n            <input name='email' type='text' placeholder='Email' onChange={handleChange()}/>\n          </label>\n        </div>\n        <div>\n          <label>\n            <input name='password' type='text' placeholder='Password' onChange={handleChange()}/>\n          </label>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginFormComponent\n","/Users/madelineadonley/bootcamp/projects/memo-rise/memorize/client/src/utils/auth.js",[],[],"/Users/madelineadonley/bootcamp/projects/memo-rise/memorize/client/src/components/MainContainer.jsx",["38"],[],"import React from 'react';\nimport LoginForm from './LoginSignup.js/Login';\nimport MyMemories from './myMemories/MyMemories';\n// import components into main container and conditionally render them.\n\n\n\nconst MainContainter = () => {\n    return (\n        <div>\n            {/* <LoginForm></LoginForm> */}\n            <MyMemories></MyMemories>\n        </div>\n    )\n}\n\nexport default MainContainter;",["39","40"],"/Users/madelineadonley/bootcamp/projects/memo-rise/memorize/client/src/components/myMemories/MyMemories.jsx",["41"],[],"import React from 'react'\nimport { useQuery } from '@apollo/client'\n// need to grab user's memories and render each as a div with a image and a button\n\nconst myMemories = () => {\n    return (\n        <div>\n            <div>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default myMemories",{"ruleId":"42","severity":1,"message":"43","line":12,"column":18,"nodeType":"44","messageId":"45","endLine":12,"endColumn":27},{"ruleId":"46","severity":1,"message":"47","line":32,"column":5,"nodeType":"44","messageId":"48","endLine":32,"endColumn":14},{"ruleId":"42","severity":1,"message":"49","line":2,"column":8,"nodeType":"44","messageId":"45","endLine":2,"endColumn":17},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"42","severity":1,"message":"54","line":2,"column":10,"nodeType":"44","messageId":"45","endLine":2,"endColumn":18},"no-unused-vars","'setErrors' is assigned a value but never used.","Identifier","unusedVar","no-const-assign","'setErrors' is constant.","const","'LoginForm' is defined but never used.","no-native-reassign",["55"],"no-negated-in-lhs",["56"],"'useQuery' is defined but never used.","no-global-assign","no-unsafe-negation"]