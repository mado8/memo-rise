[{"/Users/carsoncolgate/Desktop/memo-rise/memorize/client/src/index.js":"1","/Users/carsoncolgate/Desktop/memo-rise/memorize/client/src/App.js":"2","/Users/carsoncolgate/Desktop/memo-rise/memorize/client/src/components/MainContainer.js":"3","/Users/carsoncolgate/Desktop/memo-rise/memorize/client/src/components/LoginSignup.js/Login.jsx":"4","/Users/carsoncolgate/Desktop/memo-rise/memorize/client/src/utils/auth.js":"5","/Users/carsoncolgate/Desktop/memo-rise/memorize/client/src/utils/mutation.js":"6"},{"size":141,"mtime":1644686473287,"results":"7","hashOfConfig":"8"},{"size":173,"mtime":1644688465500,"results":"9","hashOfConfig":"8"},{"size":297,"mtime":1644688465500,"results":"10","hashOfConfig":"8"},{"size":2153,"mtime":1644694433283,"results":"11","hashOfConfig":"8"},{"size":1233,"mtime":1644688465501,"results":"12","hashOfConfig":"8"},{"size":857,"mtime":1644694359330,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q1ccxm",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":2,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":2,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/carsoncolgate/Desktop/memo-rise/memorize/client/src/index.js",[],[],"/Users/carsoncolgate/Desktop/memo-rise/memorize/client/src/App.js",[],[],"/Users/carsoncolgate/Desktop/memo-rise/memorize/client/src/components/MainContainer.js",[],[],"/Users/carsoncolgate/Desktop/memo-rise/memorize/client/src/components/LoginSignup.js/Login.jsx",["33","34","35","36","37","38","39","40"],[],"import React, { useState } from 'react'\nconst AuthService = require('../../utils/auth')\nimport { loginUser } from '../../utils/mutation';\nimport Auth from '../../utils/auth';\n\nconst LoginForm = () => {\n    const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n    const [validated] = useState(false);\n    const [showAlert, setShowAlert] = useState(false);\n\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        setUserFormData({ ...userFormData, [name]: value });\n    };\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        // check if form has everything (as per react-bootstrap docs)\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        try {\n            const response = await loginUser(userFormData);\n\n            if (!response.ok) {\n                throw new Error('something went wrong!');\n            }\n\n            const { token, user } = await response.json();\n            console.log(user);\n            Auth.login(token);\n        } catch (err) {\n            console.error(err);\n            setShowAlert(true);\n        }\n\n        setUserFormData({\n            username: '',\n            email: '',\n            password: '',\n        });\n    };\n}\nconst LoginFormComponent = () => {\n\n    return (\n        <div>\n            <form>\n                <div>\n                    <label>\n                        <input name='username' type='text' placeholder='Username' />\n                    </label>\n                </div>\n                <div>\n                    <label>\n                        <input name='email' type='text' placeholder='Email' />\n                    </label>\n                </div>\n                <div>\n                    <label>\n                        <input name='password' type='text' placeholder='Password' />\n                    </label>\n                </div>\n                <button type='submit'> Submit</button>\n            </form>\n        </div>\n    )\n}\nexport default LoginFormComponent","/Users/carsoncolgate/Desktop/memo-rise/memorize/client/src/utils/auth.js",[],[],"/Users/carsoncolgate/Desktop/memo-rise/memorize/client/src/utils/mutation.js",[],[],{"ruleId":"41","severity":1,"message":"42","line":2,"column":7,"nodeType":"43","messageId":"44","endLine":2,"endColumn":18},{"ruleId":"45","severity":2,"message":"46","line":3,"column":1,"nodeType":"47","endLine":3,"endColumn":50,"fix":"48"},{"ruleId":"45","severity":2,"message":"46","line":4,"column":1,"nodeType":"47","endLine":4,"endColumn":37,"fix":"49"},{"ruleId":"41","severity":1,"message":"50","line":6,"column":7,"nodeType":"43","messageId":"44","endLine":6,"endColumn":16},{"ruleId":"41","severity":1,"message":"51","line":8,"column":12,"nodeType":"43","messageId":"44","endLine":8,"endColumn":21},{"ruleId":"41","severity":1,"message":"52","line":9,"column":12,"nodeType":"43","messageId":"44","endLine":9,"endColumn":21},{"ruleId":"41","severity":1,"message":"53","line":11,"column":11,"nodeType":"43","messageId":"44","endLine":11,"endColumn":28},{"ruleId":"41","severity":1,"message":"54","line":16,"column":11,"nodeType":"43","messageId":"44","endLine":16,"endColumn":27},"no-unused-vars","'AuthService' is assigned a value but never used.","Identifier","unusedVar","import/first","Import in body of module; reorder to top.","ImportDeclaration",{"range":"55","text":"56"},{"range":"57","text":"58"},"'LoginForm' is assigned a value but never used.","'validated' is assigned a value but never used.","'showAlert' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'handleFormSubmit' is assigned a value but never used.",[137,137],"",[0,174],"import React, { useState } from 'react'\nimport { loginUser } from '../../utils/mutation';\nimport Auth from '../../utils/auth';\nconst AuthService = require('../../utils/auth')"]